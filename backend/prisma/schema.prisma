generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  releaseDate DateTime
  duration    Int
  bookings    Booking[]
  showtimes   Showtime[] @relation("MovieShowtimes") // Corrected relation name
}

model Theater {
  id        Int      @id @default(autoincrement())
  name      String
  location  String
  screens   Screen[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Screen {
  id         Int       @id @default(autoincrement())
  theaterId  Int
  screenName String
  capacity   Int
  theater    Theater   @relation(fields: [theaterId], references: [id])
  bookings   Booking[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]
}

model Showtime {
  id        Int      @id @default(autoincrement())
  movieId   Int
  movie     Movie    @relation("MovieShowtimes", fields: [movieId], references: [id]) // Corrected relation name
  startTime DateTime
  endTime   DateTime
}

model Booking {
  id        Int      @id @default(autoincrement())
  userId    Int
  movieId   Int
  screenId  Int
  showTime  DateTime
  seatCount Int
  totalCost Float
  status    String // e.g., 'confirmed', 'pending', 'canceled'
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  movie  Movie  @relation(fields: [movieId], references: [id])
  screen Screen @relation(fields: [screenId], references: [id])
}
